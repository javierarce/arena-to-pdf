#!/usr/bin/env ruby

require 'arena'
require 'open-uri'
require 'dotenv/load'
require 'fileutils'
require 'uri'

class ArenaDownloader

  attr_accessor :url

  def initialize(url, dir)
    @url = url
    @channel = nil
    @dirname = dir || ENV['PDF_FOLDER_PATH']
  end

  def showInfo(message)
    puts "\033[32m#{message}\033[0m" 
  end

  def showError(message)
    puts "\033[31m#{message}\033[0m" 
  end

  def login
    Arena.configure do |config|
      config.access_token = ENV['ACCESS_TOKEN']
    end
  end

  def start
    login

    slug = URI(@url).path.split('/').last

    begin
      per_page = 100
      @channel = Arena.channel(slug, { page: 0, per: per_page })
      blocksCount = @channel.length
      pagesCount = ( blocksCount / per_page ) + ( (blocksCount % per_page == 0) ?  0 : 1 )

      createDirectory

      (pagesCount).times do |c|
        @channel = Arena.channel(slug, { page: c + 1, per: per_page })
        download(@channel.contents, c + 1)
      end

    rescue Exception => e
      showError("Channel not found #{e}")
    end

  end

  def createDirectory
    @dirname = @dirname ?  "#{@dirname}/#{@channel.title}" : "PDF/#{@channel.title}"

    unless Dir.exists?(@dirname)
      FileUtils.mkdir_p(@dirname) 
    end
  end

  def downloadAttachment(title, attachment, page, index, total)
    puts "[#{page} - #{index}/#{total}] \033[31m#{title}\033[0m" 

    filename = "#{@dirname}/#{title}"
    filename += '.pdf' unless title.end_with? '.pdf'

    unless File.exist?(filename)
      open(filename, 'wb') do |file|
        file << open(attachment.url).read
      end
    end
  end

  def download(content, page)
    connectables = content.select do |c|
      c if c.respond_to?(:attachment) and c.attachment and c.attachment.extension === 'pdf'
    end

    if connectables.length === 0
      showError("#{@channel.title} doesn't contain any PDF ")
      return
    end

    showInfo("Downloading #{connectables.length} files from #{@channel.title}")

    connectables.each_with_index do |c, index| 
      downloadAttachment(c.title, c.attachment, page, index + 1, connectables.length)
    end 
  end
end

if ARGV[0].nil?
  puts 'Command syntax: ./download CHANNEL_URL [PDF_FOLDER_PATH]'
else
  downloader = ArenaDownloader.new(ARGV[0], ARGV[1])
  downloader.start
end
